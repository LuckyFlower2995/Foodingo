{"version":3,"file":"static/js/main.ab8ce570.js","mappings":"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","sources":["HomeScreen.js","StartAssesment.js","LevelMap.js","DifficultySelection.js","DifficultyLevel/NewbieLevel.js","DifficultyLevel/NoviceLevel.js","DifficultyLevel/MidTierLevel.js","DifficultyLevel/AdvancedLevel.js","DifficultyLevel/ExpertLevel.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, Button, Image, ImageBackground, TouchableOpacity, TextInput} from 'react-native';\n//import LinearGradient from 'react-native-linear-gradient';\n\n//import db from './firebase';\n//import { addDoc, collection } from \"firebase/firestore\";\n\nconst logoImage = require('./assets/DingoLogo.jpg');\nconst BackgroundImg = require('./assets/StartingBG.jpg');\n\nconst AssessmentButton = ({title, onPress}) => {\n  return(\n      <TouchableOpacity style={styles.button} onPress={onPress}>\n           <Text style ={styles.buttonText}> {title} </Text>\n      </TouchableOpacity>\n  );\n};\n\nfunction HomeScreen({ navigation }) {\n\n  /*\n  //This is taken from Firebase Cloud Firestore example code\n  const testing = async() => {\n    try {\n      const docRef = await addDoc(collection(db, \"users\"), {\n        first: \"Ada\",\n        last: \"Lovelace\",\n        born: 1815\n      });\n      console.log(\"Document written with ID: \", docRef.id);\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  }\n  */\n  return (\n    <ImageBackground source={BackgroundImg} style={styles.container}>\n      <Image source={logoImage} style={styles.logo}/>\n\n      <Text style={styles.headerText}>Welcome</Text>\n      <Text style={styles.chefText}>CHEF</Text>\n      \n      <Text style={styles.subText}>Let's assess your culinary skills!</Text>\n\n      <AssessmentButton \n        title = \"Start Assessment\"\n        onPress={() => navigation.navigate('StartAssesment')}\n      />  \n\n      {/*<AssessmentButton  \n        title = \"Skip\"\n        onPress={() => navigation.navigate('DifficultySelection')}\n      />  \n  <Text style={styles.subText}>Choose your own level?</Text>*/}\n\n      {/* <TextInput\n      style={styles.subText}\n      placeholder= \"Enter something\"\n      onSubmitEditing= {testing}\n      />\n      <StatusBar style=\"auto\" />*/}\n    \n    </ImageBackground>\n    \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: '5%'\n  },\n  headerText: {\n    color: 'white',\n    fontSize: 67,\n    fontFamily: 'Times New Roman',\n    letterSpacing: 3,\n    textAlign: 'center',\n  },\n  chefText: {\n    color: 'white',\n    fontSize: 37,\n    fontFamily: 'Avenir-Roman',\n    letterSpacing: 7,\n    textAlign: 'center',\n    paddingTop: 10,\n    paddingBottom: 20,\n  },\n  subText: {\n    color: '#d4081d',\n    fontSize: 30,\n    fontFamily: 'Times New Roman',\n    textAlign: 'center',\n    letterSpacing: 1,\n    width: 300,\n    paddingBottom: 30,\n  },\n  logo: {\n    width: 150,\n    height: 150, \n    marginTop: 50,\n    marginBottom: 50,\n    borderRadius: 150,\n    paddingBottom: '5%',\n  },\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 40,\n    height: 40,\n    marginBottom: 10,\n    borderRadius: 40,\n    backgroundColor: 'rgba(255 255 255/ 0.5)',\n},\n  buttonText: {\n      textTransform: 'uppercase',\n      color: '#f04713',\n      fontFamily: 'Arial-BoldMT',\n      fontWeight: 'bold',\n      letterSpacing: 3,\n      fontSize: 20,\n      textDecorationLine: 'none', \n      marginLeft: 10,\n  },\n});\n\nexport default HomeScreen;","import React, {useState} from \"react\";\r\nimport { Button, View, Text, Image, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst options = [\r\n    'Follow Basic Recipes',\r\n    'Follow Any Recipe',\r\n    'Add/Subtract From Any Recipe with Some Success',\r\n    'Prepare Most Packaged Foods',\r\n    'Cook Without A Recipe',\r\n];\r\n\r\n\r\nconst CustomButton = ({ title, onPress, isChecked }) => {\r\n    return (\r\n        <TouchableOpacity style={styles.button} onPress={onPress}>\r\n            {isChecked && (\r\n            <Ionicons\r\n                name='checkbox'\r\n                size={24}\r\n                color='white'\r\n                style = {styles.checkbox}\r\n            />\r\n            )}\r\n            <Text style ={styles.buttonText}> {title} </Text>\r\n        </TouchableOpacity>\r\n    );\r\n};\r\nfunction StartAssesment ({navigation}) {\r\n    // [isChecked, setIsChecked] = useState(false);\r\n    const [selectedButton, setSelectedButton] = useState([]);\r\n\r\n    const handleButtonPress = (index) => {\r\n       // setSelectedButton(index==selectedButton ? null : index);\r\n       const newSelectedButtons = [...selectedButton]; //copy of selected buttons array\r\n\r\n       const indexInSelected = newSelectedButtons.indexOf(index); //check if button is already selected\r\n\r\n       if (indexInSelected !== -1) {\r\n        newSelectedButtons.splice(indexInSelected, 1);\r\n       }\r\n       else {\r\n        newSelectedButtons.push(index);\r\n       }\r\n\r\n       setSelectedButton(newSelectedButtons);\r\n    };\r\n\r\n    function Confirm () {\r\n        // add code that take user response and unlock certain level base on response\r\n        nav = navigation\r\n        nav.navigate(\"LevelMap\");   \r\n     };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text>You Can... (Choose All That Apply)</Text>\r\n            {options.map((option, index) => ( \r\n                <CustomButton \r\n                    key={index}\r\n                    title={option}\r\n                    onPress={() => handleButtonPress(index)}\r\n                    isChecked={selectedButton.includes(index)}\r\n                />\r\n             ))}\r\n            <Button title=\"Confirm\" onPress={() => Confirm()}></Button>\r\n        </View>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'lightsalmon',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        paddingTop: '10%',\r\n        paddingHorizontal: 20,\r\n    },\r\n    button: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginBottom: 10,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        textDecorationLine: 'none', //underline for button text\r\n        marginLeft: 10,\r\n    },\r\n    checkbox: {\r\n        marginLeft: -5,\r\n    },\r\n\r\n});\r\n\r\nexport default StartAssesment; \r\n","import React from 'react';\nimport {Text, View} from 'react-native';\n\nconst LevelMap = () => {\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}>\n      <Text>This Is Just Place Holder For Level Map!</Text>\n    </View>\n  );\n};\nexport default LevelMap;","import React, {useState} from 'react';\nimport { Button, View, Text, StyleSheet, TouchableOpacity, ImageBackground, Alert} from \"react-native\";\nimport { Ionicons } from '@expo/vector-icons';\n\nconst BackgroundImg = require('./assets/LevelMapBG.jpg');\nconst levels = [\n    'Newbie',\n    'Novice',\n    'Mid-Tier',\n    'Advanced',\n    'Expert',\n];\n\nconst LevelButton = ({title, onPress}) => {\n    return(\n        <TouchableOpacity style={styles.button} onPress={onPress}>\n             <Text style ={styles.buttonText}> {title} </Text>\n        </TouchableOpacity>\n    );\n};\n\nfunction DifficultySelection({navigation}){\n    return (\n        <ImageBackground source={BackgroundImg} \n        style={styles.container}>\n            <Text style={styles.headerText}> Choose </Text>\n            <Text style={styles.headerText}> Your Level </Text>\n            \n            <Ionicons\n                name= 'information-circle-outline'\n                size= {32}\n                color= 'white'\n                onPress= {() => Alert.alert('Get Started', 'Choose A Recipes Difficulty Level')}\n            />\n\n            {levels.map((level, index) => ( \n                <LevelButton \n                    key={index}\n                    title={level}\n                    onPress={() => {switch(index){\n                        case 0:\n                            navigation.navigate('NewbieLevel')\n                            break;\n                        case 1:\n                            navigation.navigate('NoviceLevel')\n                            break;\n                        case 2:\n                            navigation.navigate('MidTierLevel')\n                            break;\n                        case 3:\n                            navigation.navigate('AdvancedLevel')\n                            break;\n                        case 4:\n                            navigation.navigate('ExpertLevel')\n                            break;\n                    }}}\n                />\n             ))}\n            \n        </ImageBackground>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      paddingTop: '7%'\n    },\n    headerText: {\n      textTransform: 'uppercase',\n      color: 'white',\n      fontFamily: 'Avenir-Roman',\n      fontSize: 45,\n      textAlign: 'center',\n    },\n    button: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginVertical: 40,\n        height: 60,\n        marginBottom: 10,\n        borderRadius: 40,\n        backgroundColor: 'rgba(255 255 255/ 0.5)',\n    },\n    buttonText: {\n        textTransform: 'uppercase',\n        color: '#995c1f',\n        fontFamily: 'Arial Rounded MT Bold',\n        fontSize: 40,\n        textDecorationLine: 'none', \n        marginLeft: 10,\n    },\n  });\n\nexport default DifficultySelection;","import { useState } from 'react';\n\nimport {SectionList, Pressable, StyleSheet, Text, View} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nfunction MyCheckbox() {\n  const [checked, setChecked] = useState(false);\n  return (\n    <Pressable\n      style={[styles.checkboxBase, checked && styles.checkboxChecked]}\n      onPress={() => setChecked(!checked)}>\n      {checked && <Ionicons name=\"checkmark\" size={24} color=\"white\" />}\n    </Pressable>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    \n    paddingTop: 22,\n  },\n  appTitle: {\n    fontFamily: 'Avenir-Roman',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 24,\n  },\n  sectionHeader: {\n    backgroundColor: '',\n    marginTop: 16,\n    paddingTop: 2,\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingBottom: 2,\n    fontSize: 16,\n    fontWeight: 'bold',\n    backgroundColor: 'rgba(247,247,247,1.0)',\n  },\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n  },\n  item: {\n    marginLeft: 8,\n    fontWeight: 500,\n    fontSize: 18,\n    padding: 16,\n  },\n  checkboxBase: {\n    width: 24,\n    height: 24,\n    alignContent: 'center',\n    borderRadius: 4,\n    borderWidth: 2,\n    borderColor: '#ff0000',\n    backgroundColor: 'transparent',\n  },\n  checkboxChecked: {\n    backgroundColor: '#ff0000',\n  },\n\n});\n\n\nconst SectionListBasics = () => {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.appTitle}>Newbie Assesment</Text>\n      <SectionList\n        sections={[\n          {title: 'To cook pasta, you must: _________, until desired state is reached ', \n          data: ['Put into cold water then boil', \n          'Put into simmmering water and continue simmering', 'Put into boiling water and keep boiling', \n          'None of the above']},\n          {\n            title: 'Question 2',\n            data: [\n              'Jackson',\n              'James',\n              'Jillian',\n              'Jimmy',\n            ],\n          },\n          {\n            title: 'Question 3',\n            data: [\n              'Jackson',\n              'James',\n              'Jillian',\n              'Jimmy',\n            ],\n          },\n          {\n            title: 'Question 4',\n            data: [\n              'Jackson',\n              'James',\n              'Jillian',\n              'Jimmy',\n            ],\n          },\n        ]}\n        renderSectionHeader={({section}) => (\n          <Text style={styles.sectionHeader}>{section.title}</Text>\n        )}\n        renderItem={({item}) => <View style={styles.checkboxContainer}><MyCheckbox /><Text style={styles.item}>{item}</Text></View>}\n\n        keyExtractor={item => `basicListEntry-${item}`}\n      />\n    \n    </View>\n  );\n};\n\n\nexport default SectionListBasics;","import { useState } from 'react';\n\nimport {SectionList, Pressable, StyleSheet, Text, View} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nfunction MyCheckbox() {\n  const [checked, setChecked] = useState(false);\n  return (\n    <Pressable\n      style={[styles.checkboxBase, checked && styles.checkboxChecked]}\n      onPress={() => setChecked(!checked)}>\n      {checked && <Ionicons name=\"checkmark\" size={24} color=\"white\" />}\n    </Pressable>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    \n    paddingTop: 22,\n  },\n  appTitle: {\n    fontFamily: 'Avenir-Roman',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 24,\n  },\n  sectionHeader: {\n    backgroundColor: '',\n    marginTop: 16,\n    paddingTop: 2,\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingBottom: 2,\n    fontSize: 16,\n    fontWeight: 'bold',\n    backgroundColor: 'rgba(247,247,247,1.0)',\n  },\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n  },\n  item: {\n    marginLeft: 8,\n    fontWeight: 500,\n    fontSize: 18,\n    padding: 16,\n  },\n  checkboxBase: {\n    width: 24,\n    height: 24,\n    alignContent: 'center',\n    borderRadius: 4,\n    borderWidth: 2,\n    borderColor: '#ff0000',\n    backgroundColor: 'transparent',\n  },\n  checkboxChecked: {\n    backgroundColor: '#ff0000',\n  },\n\n});\n\n\nconst SectionListBasics = () => {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.appTitle}>Novice Assesment</Text>\n      <SectionList\n        sections={[\n          {title: 'To cook pasta, you must: _________, until desired state is reached ', \n          data: ['Put into cold water then boil', \n          'Put into simmmering water and continue simmering', 'Put into boiling water and keep boiling', \n          'None of the above']},\n          {\n            title: 'Question 2',\n            data: [\n              'Jackson',\n              'James',\n              'Jillian',\n              'Jimmy',\n            ],\n          },\n          {\n            title: 'Question 3',\n            data: [\n              'Jackson',\n              'James',\n              'Jillian',\n              'Jimmy',\n            ],\n          },\n          {\n            title: 'Question 4',\n            data: [\n              'Jackson',\n              'James',\n              'Jillian',\n              'Jimmy',\n            ],\n          },\n        ]}\n        renderSectionHeader={({section}) => (\n          <Text style={styles.sectionHeader}>{section.title}</Text>\n        )}\n        renderItem={({item}) => <View style={styles.checkboxContainer}><MyCheckbox /><Text style={styles.item}>{item}</Text></View>}\n\n        keyExtractor={item => `basicListEntry-${item}`}\n      />\n    \n    </View>\n  );\n};\n\n\nexport default SectionListBasics;","import { useState } from 'react';\n\nimport {SectionList, Pressable, StyleSheet, Text, View} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nfunction MyCheckbox() {\n  const [checked, setChecked] = useState(false);\n  return (\n    <Pressable\n      style={[styles.checkboxBase, checked && styles.checkboxChecked]}\n      onPress={() => setChecked(!checked)}>\n      {checked && <Ionicons name=\"checkmark\" size={24} color=\"white\" />}\n    </Pressable>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    \n    paddingTop: 22,\n  },\n  appTitle: {\n    fontFamily: 'Avenir-Roman',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 24,\n  },\n  sectionHeader: {\n    backgroundColor: '',\n    marginTop: 16,\n    paddingTop: 2,\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingBottom: 2,\n    fontSize: 16,\n    fontWeight: 'bold',\n    backgroundColor: 'rgba(247,247,247,1.0)',\n  },\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n  },\n  item: {\n    marginLeft: 8,\n    fontWeight: 500,\n    fontSize: 18,\n    padding: 16,\n  },\n  checkboxBase: {\n    width: 24,\n    height: 24,\n    alignContent: 'center',\n    borderRadius: 4,\n    borderWidth: 2,\n    borderColor: '#ff0000',\n    backgroundColor: 'transparent',\n  },\n  checkboxChecked: {\n    backgroundColor: '#ff0000',\n  },\n\n});\n\n\nconst SectionListBasics = () => {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.appTitle}>Mid-Tier Assesment</Text>\n      <SectionList\n        sections={[\n          {title: 'To cook pasta, you must: _________, until desired state is reached ', \n          data: ['Put into cold water then boil', \n          'Put into simmmering water and continue simmering', 'Put into boiling water and keep boiling', \n          'None of the above']},\n          {\n            title: 'Question 2',\n            data: [\n              'Jackson',\n              'James',\n              'Jillian',\n              'Jimmy',\n            ],\n          },\n          {\n            title: 'Question 3',\n            data: [\n              'Jackson',\n              'James',\n              'Jillian',\n              'Jimmy',\n            ],\n          },\n          {\n            title: 'Question 4',\n            data: [\n              'Jackson',\n              'James',\n              'Jillian',\n              'Jimmy',\n            ],\n          },\n        ]}\n        renderSectionHeader={({section}) => (\n          <Text style={styles.sectionHeader}>{section.title}</Text>\n        )}\n        renderItem={({item}) => <View style={styles.checkboxContainer}><MyCheckbox /><Text style={styles.item}>{item}</Text></View>}\n\n        keyExtractor={item => `basicListEntry-${item}`}\n      />\n    \n    </View>\n  );\n};\n\n\nexport default SectionListBasics;","import { useState } from 'react';\n\nimport {SectionList, Pressable, StyleSheet, Text, View} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nfunction MyCheckbox() {\n  const [checked, setChecked] = useState(false);\n  return (\n    <Pressable\n      style={[styles.checkboxBase, checked && styles.checkboxChecked]}\n      onPress={() => setChecked(!checked)}>\n      {checked && <Ionicons name=\"checkmark\" size={24} color=\"white\" />}\n    </Pressable>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    \n    paddingTop: 22,\n  },\n  appTitle: {\n    fontFamily: 'Avenir-Roman',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 24,\n  },\n  sectionHeader: {\n    backgroundColor: '',\n    marginTop: 16,\n    paddingTop: 2,\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingBottom: 2,\n    fontSize: 16,\n    fontWeight: 'bold',\n    backgroundColor: 'rgba(247,247,247,1.0)',\n  },\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n  },\n  item: {\n    marginLeft: 8,\n    fontWeight: 500,\n    fontSize: 18,\n    padding: 16,\n  },\n  checkboxBase: {\n    width: 24,\n    height: 24,\n    alignContent: 'center',\n    borderRadius: 4,\n    borderWidth: 2,\n    borderColor: '#ff0000',\n    backgroundColor: 'transparent',\n  },\n  checkboxChecked: {\n    backgroundColor: '#ff0000',\n  },\n\n});\n\n\nconst SectionListBasics = () => {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.appTitle}>Advanced Assesment</Text>\n      <SectionList\n        sections={[\n          {title: 'To cook pasta, you must: _________, until desired state is reached ', \n          data: ['Put into cold water then boil', \n          'Put into simmmering water and continue simmering', 'Put into boiling water and keep boiling', \n          'None of the above']},\n          {\n            title: 'Question 2',\n            data: [\n              'Jackson',\n              'James',\n              'Jillian',\n              'Jimmy',\n            ],\n          },\n          {\n            title: 'Question 3',\n            data: [\n              'Jackson',\n              'James',\n              'Jillian',\n              'Jimmy',\n            ],\n          },\n          {\n            title: 'Question 4',\n            data: [\n              'Jackson',\n              'James',\n              'Jillian',\n              'Jimmy',\n            ],\n          },\n        ]}\n        renderSectionHeader={({section}) => (\n          <Text style={styles.sectionHeader}>{section.title}</Text>\n        )}\n        renderItem={({item}) => <View style={styles.checkboxContainer}><MyCheckbox /><Text style={styles.item}>{item}</Text></View>}\n\n        keyExtractor={item => `basicListEntry-${item}`}\n      />\n    \n    </View>\n  );\n};\n\n\nexport default SectionListBasics;","import { useState } from 'react';\n\nimport {SectionList, Pressable, StyleSheet, Text, View} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nfunction MyCheckbox() {\n  const [checked, setChecked] = useState(false);\n  return (\n    <Pressable\n      style={[styles.checkboxBase, checked && styles.checkboxChecked]}\n      onPress={() => setChecked(!checked)}>\n      {checked && <Ionicons name=\"checkmark\" size={24} color=\"white\" />}\n    </Pressable>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    \n    paddingTop: 22,\n  },\n  appTitle: {\n    fontFamily: 'Avenir-Roman',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 24,\n  },\n  sectionHeader: {\n    backgroundColor: '',\n    marginTop: 16,\n    paddingTop: 2,\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingBottom: 2,\n    fontSize: 16,\n    fontWeight: 'bold',\n    backgroundColor: 'rgba(247,247,247,1.0)',\n  },\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n  },\n  item: {\n    marginLeft: 8,\n    fontWeight: 500,\n    fontSize: 18,\n    padding: 16,\n  },\n  checkboxBase: {\n    width: 24,\n    height: 24,\n    alignContent: 'center',\n    borderRadius: 4,\n    borderWidth: 2,\n    borderColor: '#ff0000',\n    backgroundColor: 'transparent',\n  },\n  checkboxChecked: {\n    backgroundColor: '#ff0000',\n  },\n\n});\n\n\nconst SectionListBasics = () => {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.appTitle}>Expert Assesment</Text>\n      <SectionList\n        sections={[\n          {title: 'To cook pasta, you must: _________, until desired state is reached ', \n          data: ['Put into cold water then boil', \n          'Put into simmmering water and continue simmering', 'Put into boiling water and keep boiling', \n          'None of the above']},\n          {\n            title: 'Question 2',\n            data: [\n              'Jackson',\n              'James',\n              'Jillian',\n              'Jimmy',\n            ],\n          },\n          {\n            title: 'Question 3',\n            data: [\n              'Jackson',\n              'James',\n              'Jillian',\n              'Jimmy',\n            ],\n          },\n          {\n            title: 'Question 4',\n            data: [\n              'Jackson',\n              'James',\n              'Jillian',\n              'Jimmy',\n            ],\n          },\n        ]}\n        renderSectionHeader={({section}) => (\n          <Text style={styles.sectionHeader}>{section.title}</Text>\n        )}\n        renderItem={({item}) => <View style={styles.checkboxContainer}><MyCheckbox /><Text style={styles.item}>{item}</Text></View>}\n\n        keyExtractor={item => `basicListEntry-${item}`}\n      />\n    \n    </View>\n  );\n};\n\n\nexport default SectionListBasics;","import React from 'react';\nimport HomeScreen from './HomeScreen';\nimport StartAssesment from './StartAssesment';\nimport LevelMap from './LevelMap';\nimport DifficultySelection from './DifficultySelection';\nimport NewbieLevel from './DifficultyLevel/NewbieLevel';\nimport NoviceLevel from './DifficultyLevel/NoviceLevel';\nimport MidTierLevel from './DifficultyLevel/MidTierLevel';\nimport AdvancedLevel from './DifficultyLevel/AdvancedLevel';\nimport ExpertLevel from './DifficultyLevel/ExpertLevel';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen\n          name = \"Home\"\n          component={HomeScreen}\n          options={{\n            title: 'Welcome',\n            headerShown: false,\n            headerStyle: {\n              backgroundColor: 'lightsalmon'\n            }\n          }}\n        />\n        <Stack.Screen \n          name=\"StartAssesment\"\n          component={StartAssesment}\n          options={{title: 'Assesment Page'}}\n        />\n        <Stack.Screen \n          name=\"LevelMap\"\n          component={LevelMap}\n          options={{title: 'Level Map'}}\n        />\n        {/*<Stack.Screen \n          name=\"DifficultySelection\"\n          component={DifficultySelection}\n          options={{title: 'Difficulty Selection', headerBackVisible: false}}\n        />\n        <Stack.Screen \n          name=\"NewbieLevel\"\n          component={NewbieLevel}\n          options={{title: 'Newbie Level'}}\n        />\n        <Stack.Screen \n          name=\"NoviceLevel\"\n          component={NoviceLevel}\n          options={{title: 'Novice Level'}}\n        />\n        <Stack.Screen \n          name=\"MidTierLevel\"\n          component={MidTierLevel}\n          options={{title: 'Mid-Tier Level'}}\n        />\n        <Stack.Screen \n          name=\"AdvancedLevel\"\n          component={AdvancedLevel}\n          options={{title: 'Advanced Level'}}\n        />\n        <Stack.Screen \n          name=\"ExpertLevel\"\n          component={ExpertLevel}\n          options={{title: 'Expert Level'}}\n        />*/}\n      </Stack.Navigator>\n    </NavigationContainer>\n\n  );\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [842], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["logoImage","require","BackgroundImg","AssessmentButton","_ref","title","onPress","_jsx","TouchableOpacity","style","styles","button","children","_jsxs","Text","buttonText","StyleSheet","create","container","flex","alignItems","justifyContent","paddingTop","headerText","color","fontSize","fontFamily","letterSpacing","textAlign","chefText","paddingBottom","subText","width","logo","height","marginTop","marginBottom","borderRadius","flexDirection","marginVertical","backgroundColor","textTransform","fontWeight","textDecorationLine","marginLeft","_ref2","navigation","ImageBackground","source","Image","navigate","options","CustomButton","isChecked","Ionicons","name","size","checkbox","paddingHorizontal","_useState","useState","_useState2","_slicedToArray","selectedButton","setSelectedButton","View","map","option","index","newSelectedButtons","_toConsumableArray","indexInSelected","indexOf","splice","push","handleButtonPress","includes","Button","nav","appTitle","sectionHeader","paddingLeft","paddingRight","checkboxContainer","margin","item","padding","checkboxBase","alignContent","borderWidth","borderColor","checkboxChecked","Stack","createNativeStackNavigator","App","NavigationContainer","Navigator","Screen","component","HomeScreen","headerShown","headerStyle","StartAssesment","LevelMap","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}